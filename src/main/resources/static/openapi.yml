openapi: "3.0.2"
info:
  title: Freelancer Web Services API
  version: "0.1"
paths:
  /:
    get:
      tags:
        - Root
      description: Retrieves the resources that compose the Freelancer Web Services API.
      responses:
        "200":
          description: Success
          content:
            application/hal+json:
              schema:
                type: object
                required:
                  - _links
                properties:
                  _links:
                    type: object
                    required:
                      - self
                      - freelancers
                    properties:
                      self:
                        $ref: "#/components/schemas/Link"
                      freelancers:
                        $ref: "#/components/schemas/Link"
        default:
          $ref: "#/components/responses/Error"

  /freelancers:
    get:
      tags:
        - Freelancers
      description: Retrieves all the freelancers registered on the system.
      responses:
        "200":
          description: Success
          content:
            application/hal+json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/Entity"
                  - type: object
                    required:
                      - _embedded
                    properties:
                      _embedded:
                        type: object
                        required:
                          - freelancers
                        properties:
                          freelancers:
                            type: array
                            items:
                              $ref: "#/components/schemas/Freelancer"
        default:
          $ref: "#/components/responses/Error"
    post:
      tags:
        - Freelancers
      description: Registers a new freelancer.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Freelancer"
      responses:
        "201":
          description: Freelancer was registered
          content:
            application/hal+json:
              schema:
                $ref: "#/components/schemas/Freelancer"
        default:
          $ref: "#/components/responses/Error"

  /freelancers/{id}:
    get:
      tags:
        - Freelancers
      description: Retrieves a registered freelancer by ID.
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: Identifier of a freelancer already registered.
      responses:
        "200":
          description: Success
          content:
            application/hal+json:
              schema:
                $ref: "#/components/schemas/Freelancer"
        default:
          $ref: "#/components/responses/Error"

components:
  schemas:
    Freelancer:
      allOf:
        - type: object
          required:
            - firstName
            - lastName
          properties:
            id:
              type: string
              example: 1
            firstName:
              type: string
              example: Tony
            lastName:
              type: string
              example: Stark
        - $ref: "#/components/schemas/Entity"
    Entity:
      type: object
      required:
        - _links
      properties:
        _links:
          type: object
          required:
            - self
          properties:
            self:
              $ref: "#/components/schemas/Link"
    Link:
      type: object
      required:
        - href
      properties:
        href:
          type: string
          example: resource/uri

  responses:
    Error:
      description: >
        Error response formatted as per the Internet Standard
        <a href="https://datatracker.ietf.org/doc/html/rfc7807">Problem Details for HTTP APIs (RFC 7807)</a>.
      content:
        application/problem+json:
          schema:
            type: object
            required:
              - type
              - title
              - status
              - instance
            properties:
              type:
                description: A URI reference that identifies the problem type.
                type: string
                format: uri-reference
                example: /probs/validation-error
              title:
                description: A short, human-readable summary of the problem type.
                type: string
                example: Bad Request
              status:
                description: The HTTP status code generated by the origin server for this occurrence of the problem.
                type: integer
                example: 400
              detail:
                description: A human-readable explanation specific to this occurrence of the problem.
                type: string
                example: Invalid request content.
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the problem.
                  It may or may not yield further information if dereferenced.
                type: string
                format: uri-reference
                example: /freelancers
              errors:
                description: Optional array that describes validation errors.
                type: array
                items:
                  type: object
                  required:
                    - detail
                  properties:
                    attribute:
                      description: >
                        Name of the request body's attribute that caused the problem,
                        if not present the whole body should be considered the cause of the problem.
                      type: string
                      example: firstName
                    detail:
                      description: A human-readable description of the error
                      type: string
                      example: must not be blank
